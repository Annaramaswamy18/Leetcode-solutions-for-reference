# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseKGroup(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        l=[]
        p=head
        while(p):
            l.append(p.val)
            p=p.next
        value=len(l)//k
        for i in range(0,len(l),k):
            h=l[i:i+k]
            if(len(h)<k):
                continue
            else:
                h=h[::-1]
                l[i:i+k]=h
        print(l)
        if(len(l)==0):
            return None
        nnode=ListNode(l[0])
        nn=nnode
        for i in range(1,len(l)):
            mm=ListNode(l[i])
            nn.next=mm
            nn=nn.next
        return nnode
        